#include <iostream>

void shift(int N[], const int n,  int k)
{
    
    if (k > n) {
        while (k > n)k -= n;
    }
    if (k < 0) {
        while (k < 0)k += n;
    }


    for (int i = 0; i < n; i++) std::cout << N[i] << ' ';

    std::cout << std::endl;
    for (int i = 0; i < ((sizeof(N) * n / 4) / 2); i++) {
        std::swap(N[i], N[n - i -1]);
    }
    for (int i = 0; i < k; i++) {
        std::swap(N[i], N[k - 1 - i]);
    }
    for (int i = 0; i < (n - k) / 2; ++i) {
        std::swap(N[i], N[n- 1 - k - i]);
    }
    for (int i = 0; i < k / 2; ++i) {
        std::swap(N[n - 1 - i], N[i + n - k]);
    }
 
    
    for (int i = 0; i < n; i++)
    {
        std::cout << N[i] << ' ';
    }
}

int main() {
    int N[10];
    for (int i = 0; i < 10; ++i) {
        N[i] = i;
    }
    shift(N, 10, 6);

}
